##
# Requires Apache2 with mod_rewrite
#
# The general idea with re-writing GO URLs is that for files and directories
# that exist (such as scripts.js, styles.css, update.php, etc) we want to 
# respond with the file at that path. For all other cases (where no file or
# directory exists) we assume that the requested path is a GO shortcut and
# internally rewrite the path to go to redirect.php which will then lookup the
# destination (if any) for the shortcut and send the user appropriate redirect
# headers.
#
# Note: These directives can be placed in the httpd.conf as well. If serving
# separate sets of shortcuts for different institutions out of the same code
# directory (via Apache VHosts), it is preferable to place these directives in
# each vhost.conf so that the institution parameters can be set appropriately.
##
RewriteEngine On

# Set this to the path of your GO instalation.
RewriteBase /


# If we don't have a full host-name, bump out the the full hostname for MIIS IP ranges.
# If we don't do this now, then requests from MIIS IP ranges will use the default (Midd)
# hostname or configuration.
#
# MIIS VPN to Midd: 172.16.
# MIIS LAN IP range: ????
RewriteCond %{HTTP_HOST}        ^go$ [NC]
RewriteCond %{REMOTE_ADDR}      ^(172\.16\.|205\.155\.72\.)
RewriteRule (.*)         http://go.miis.edu/$1 [L,R,QSA]

# Custom host-names
RewriteCond %{HTTP_HOST}        ^mcab [NC]
RewriteRule .* http://go.middlebury.edu/mcab [L,R]


# Custom regular expression rewrite rules:
RewriteCond %{QUERY_STRING} ^([0-9]{6})/?$
RewriteRule ^courses$ https://ssb.middlebury.edu/PNTR/saturn_midd.course_catalog_utlq.catalog_page_by_dept?p_term=%1 [L,R]

RewriteCond %{QUERY_STRING} ^([0-9]{6})/?$
RewriteRule ^allcourses$ https://ssb.middlebury.edu/PNTR/saturn_midd.course_catalog_utlq.catalog_page?p_term=%1  [L,R]

RewriteCond %{QUERY_STRING} ^(.*)/?$
RewriteRule ^classof$ http://www.middlebury.edu/alumni/reunion/years/%1 [L,R]

RewriteCond %{QUERY_STRING} ^(.*)/?$
RewriteRule ^forum$ http://lists.middlebury.edu/read/\?forum=%1 [L,R]

RewriteCond %{QUERY_STRING} ^(.*)/?$
RewriteRule ^list$ https://blm.middlebury.edu/subscriptions/FindMember.aspx?filter=%1 [L,R]

RewriteCond %{QUERY_STRING} ^(.+)/?$
RewriteRule ^users$ http://community.middlebury.edu/~%1 [L,R]

RewriteCond %{QUERY_STRING} ^(.+)/?$
RewriteRule ^(pt2?|ptrack|ptracker)$ https://web.middlebury.edu/development/projects/projecttracker/Reports/Pdr_detail.aspx?project_id=%1 [L,R]


##
# mod_rewrite handles the query-string portion of requests separately from the
# rest of the path. Since we need to include the query string directly in the
# 'code' parameter that we are passing to redirect.php, we need have slightly 
# different handling if the path includes a query string so as to not include a
# bogus '?' in the code if no query is present, and to include it if there is a 
# query present.
##

# Case where there IS a query string
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteCond %{QUERY_STRING} !^$
RewriteRule ^(.*)/? redirect.php?code=$1?%{QUERY_STRING} [L]

# Case where there IS NOT a query string
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteRule ^(.*)/? redirect.php?code=$1 [L]



# If we don't have a full host-name, bump out the the full hostname. The first
# rule would have already set the MIIS hostname for the MIIS IP range, so for
# all other client IPs, expand to the middlebury version.
RewriteCond %{HTTP_HOST}   ^go$ [NC]
RewriteRule (.*)         http://go.middlebury.edu/$1 [L,R,QSA]